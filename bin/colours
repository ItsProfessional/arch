#!/bin/sh

# Gives a color $1/255 % along HSV
# Who knows what happens when $1 is outside 0-255
# Echoes "$red $green $blue" where
# $red $green and $blue are integers
# ranging between 0 and 255 inclusive
rainbow_color()
{
	let h=$1/43
	let f=$1-43*$h
	let t=$f*255/43
	let q=255-t

	if [ $h -eq 0 ]
	then
		echo "255 $t 0"
	elif [ $h -eq 1 ]
	then
		echo "$q 255 0"
	elif [ $h -eq 2 ]
	then
		echo "0 255 $t"
	elif [ $h -eq 3 ]
	then
		echo "0 $q 255"
	elif [ $h -eq 4 ]
	then
		echo "$t 0 255"
	elif [ $h -eq 5 ]
	then
		echo "255 0 $q"
	else
		# execution should never reach here
		echo "0 0 0"
	fi
}

rgb_cell() {
	printf "\033[48;2;%d;%d;%dm \033[m" "$1" "$2" "$3"
}

rgb_block() {
	printf "\033[48;2;%d;%d;%dm %-9s\033[m" "$1" "$2" "$3" "$4"
}

ansi_256_block() {
	printf "\033[48;5;%dm %-9s\033[0m" "$1" "$2"
}

ansi_256_blocks() {
	for i in $(seq $1 $(( $1 + $2))); do
		ansi_256_block "$i"
	done
	printf "\n"
}

# red spectrum
for i in $(seq 0 1 127); do
	rgb_cell $i 0 0
done
printf "\n"
for i in $(seq 255 -1 128); do
	rgb_cell $i 0 0
done
printf "\n\n"

# green spectrum
for i in $(seq 0 1 127); do
	rgb_cell 0 $i 0
done
printf "\n"
for i in $(seq 255 -1 128); do
	rgb_cell 0 $i 0
done
printf "\n\n"

# blue spectrum
for i in $(seq 0 1 127); do
	rgb_cell 0 0 $i
done
printf "\n"
for i in $(seq 255 -1 128); do
	rgb_cell 0 0 $i
done
printf "\n\n"

# rainbow spectrum
for i in $(seq 0 1 127); do
	rgb_cell $(rainbow_color $i)
done
printf "\n"
for i in $(seq 255 -1 128); do
	rgb_cell $(rainbow_color $i)
done
printf "\n\n"


echo "xterm defaults:"
rgb_block   0   0   0 "00"
rgb_block 205   0   0 "08"
rgb_block   0 205   0 "0B"
rgb_block 205 205   0 "0A"
rgb_block   0   0 238 "0D"
rgb_block 205   0 205 "0E"
rgb_block   0 205 205 "0C"
rgb_block 229 229 229 "05"
printf "\n"
rgb_block 127 127 127 "03"
rgb_block 255   0   0 "08"
rgb_block   0 255   0 "0B"
rgb_block 255 255   0 "0A"
rgb_block  92  92 255 "0D"
rgb_block 255   0 255 "0E"
rgb_block   0 255 255 "0C"
rgb_block 255 255 255 "07"
printf "\n\n"


echo "base16-default-dark:"
rgb_block 0x18 0x18 0x18 "00"
rgb_block 0xab 0x46 0x42 "08"
rgb_block 0xa1 0xb5 0x6c "0B"
rgb_block 0xf7 0xca 0x88 "0A"
rgb_block 0x7c 0xaf 0xc2 "0D"
rgb_block 0xba 0x8b 0xaf "0E"
rgb_block 0x86 0xc1 0xb9 "0C"
rgb_block 0xd8 0xd8 0xd8 "05"
printf "\n"
rgb_block 0x58 0x58 0x58 "03"
rgb_block 0xab 0x46 0x42 "08"
rgb_block 0xa1 0xb5 0x6c "0B"
rgb_block 0xf7 0xca 0x88 "0A"
rgb_block 0x7c 0xaf 0xc2 "0D"
rgb_block 0xba 0x8b 0xaf "0E"
rgb_block 0x86 0xc1 0xb9 "0C"
rgb_block 0xf8 0xf8 0xf8 "07"
printf "\n"
rgb_block 0xdc 0x96 0x56 "09"
rgb_block 0xa1 0x69 0x46 "0F"
rgb_block 0x28 0x28 0x28 "01"
rgb_block 0x38 0x38 0x38 "02"
rgb_block 0xb8 0xb8 0xb8 "04"
rgb_block 0xe8 0xe8 0xe8 "06"
printf "\n\n"


echo "base16-bright:"
rgb_block 0x00 0x00 0x00 "00"
rgb_block 0xfb 0x01 0x20 "08"
rgb_block 0xa1 0xc6 0x59 "0B"
rgb_block 0xfd 0xa3 0x31 "0A"
rgb_block 0x6f 0xb3 0xd2 "0D"
rgb_block 0xd3 0x81 0xc3 "0E"
rgb_block 0x76 0xc7 0xb7 "0C"
rgb_block 0xe0 0xe0 0xe0 "05"
printf "\n"
rgb_block 0xb0 0xb0 0xb0 "03"
rgb_block 0xfb 0x01 0x20 "08"
rgb_block 0xa1 0xc6 0x59 "0B"
rgb_block 0xfd 0xa3 0x31 "0A"
rgb_block 0x6f 0xb3 0xd2 "0D"
rgb_block 0xd3 0x81 0xc3 "0E"
rgb_block 0x76 0xc7 0xb7 "0C"
rgb_block 0xff 0xff 0xff "07"
printf "\n"
rgb_block 0xfc 0x6d 0x24 "09"
rgb_block 0xbe 0x64 0x3c "0F"
rgb_block 0x30 0x30 0x30 "01"
rgb_block 0x50 0x50 0x50 "02"
rgb_block 0xd0 0xd0 0xd0 "04"
rgb_block 0xf5 0xf5 0xf5 "06"
printf "\n\n"


echo "current ansi 256:"

# basic 16
ansi_256_block  0 "00"
ansi_256_block  1 "08"
ansi_256_block  2 "0B"
ansi_256_block  3 "0A"
ansi_256_block  4 "0D"
ansi_256_block  5 "0E"
ansi_256_block  6 "0C"
ansi_256_block  7 "05"
printf "\n"
ansi_256_block  8  "03"
ansi_256_block  9  "08"
ansi_256_block 10 "0B"
ansi_256_block 11 "0A"
ansi_256_block 12 "0D"
ansi_256_block 13 "0E"
ansi_256_block 14 "0C"
ansi_256_block 15 "07"
printf "\n"

# base16 extensions
ansi_256_block 16 "09"
ansi_256_block 17 "0F"
ansi_256_block 18 "01"
ansi_256_block 19 "02"
ansi_256_block 20 "04"
ansi_256_block 21 "06"
printf "\n"

# 216 cube, with base16 extensions at the start removed
for i in $(seq 22 6 226); do
	ansi_256_blocks $i 5
done

# greys
for i in $(seq 232 8 248); do
	ansi_256_blocks $i 7
done
printf "\n"
