#!/bin/sh

set -e

PROGNAME=efibootstub
KERNEL_ARGS_FILE=/boot/kargs
LOADER='\vmlinuz-linux'
LABEL="Arch Linux"

function usage() {
	echo "writes a UEFI stub"
	echo "usage: ${PROGNAME} <disk> <partnum, starting at 1> [suffix]"
	echo "e.g. ${PROGNAME} /dev/sda 1 amc"
	echo "reads kernel arguments from ${KERNEL_ARGS_FILE}"
	exit 1
}

if [ ${#} -lt 2 -o ${#} -gt 3 ]; then
	usage
fi

if [ ${#} -eq 3 ]; then
	LOADER="${LOADER}-${3}"
	LABEL="${LABEL} ${3}"
	KERNEL_ARGS_FILE="${KERNEL_ARGS_FILE}-${3}"
fi

if [ ! -f "${KERNEL_ARGS_FILE}" ]; then
	usage
fi

REGEX_BOOT_ENTRIES="^Boot([[:xdigit:]]*)\* (${LABEL})$"

# read kernel args
KERNEL_ARGS=$(cat ${KERNEL_ARGS_FILE})

# print the current table
echo " CURRENT:"
efibootmgr --unicode --verbose
echo
echo

# is there already an entry present?
set +e
EXISTING_ENTRY=$(efibootmgr | grep -E "${REGEX_BOOT_ENTRIES}")
set -e
if [ -n "${EXISTING_ENTRY}" ]; then

	# delete existing
	EXISTING_NUM=$(echo "${EXISTING_ENTRY}" | sed -E "s/${REGEX_BOOT_ENTRIES}/\1/")
	echo " REMOVED ${EXISTING_NUM}:"
	efibootmgr -b "${EXISTING_NUM}" -B --unicode --verbose
	echo
	echo
fi

# create the entry
echo " CREATED:"
efibootmgr --create --disk "${1}" --part "${2}" --label "${LABEL}" --loader "${LOADER}" --unicode --verbose "${KERNEL_ARGS}"
echo
echo
