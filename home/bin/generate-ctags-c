#!/bin/sh

# There are some more elegant solutions: https://www.topbug.net/blog/2012/03/17/generate-ctags-files-for-c-slash-c-plus-plus-source-files-and-all-of-their-included-header-files/
# That does need some makefile integration, to pass the cc options, so that the correct includes are followed.

usage() {
	echo "usage: $(basename ${0}) <local|system>"
	exit 1
}

if [ ${#} -ne 1 ]; then
	usage
fi

TARGET=${1}
if [ "${TARGET}" != "local" -a "${TARGET}" != "system" ]; then
	usage
fi

OPTS="--languages=C,C++"

# function prototypes
OPTS="${OPTS} --c++-kinds=+p --c-kinds=+p"

# signatures
OPTS="${OPTS} --fields=+S"

case "${TARGET}" in
	local)
		# locals
		OPTS="${OPTS} --c-kinds=+l"

		IN="."
		OUT="tags"
		;;
	system)
		IN="/usr/include"
		OUT="${HOME}/.tags"
esac

CMD="ctags ${OPTS} -f ${OUT} -R ${IN}"

echo $CMD
$CMD
