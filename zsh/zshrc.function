# interactive shell invoked functions go here

# latest systemd core
function lcd() {
	local PID=$(coredumpctl -1 | grep present | awk '{ print $5 }')
	if [ -n "${PID}" ]; then
		coredumpctl gdb "${PID}"
	fi
}

function vimdiff() {
	vi -d $@
}

function mnt() {
	if [ ${#} -ne 1 ]; then
		echo "Usage: mnt <block device>" >&2
		return 1
	fi
	udisksctl mount -b "${1}"
	echo "${1}" > /tmp/lastmntd
	cd "$(findmnt -n -o TARGET ${1})"
}

function umnt() {
	if [ ${#} -gt 1 ]; then
		echo "Usage: mnt [block device]" >&2
		return 1
	fi
	sync
	cd
	if [ -f /tmp/lastmntd ]; then
		udisksctl unmount -b "$(cat /tmp/lastmntd)"
	else
		udisksctl unmount -b "${1}"
	fi
}

function sshl_kill() {
	pkill -e -f "lemonade server"
	pkill -e -f "ssh.*${1}"
}

function sshl_print() {
	pgrep -a -f "lemonade server"
	pgrep -a -f "ssh.*${1}"
}

function sshl() {
	# use default remote and local port so that we do not need to reconfigure nvim
	local PORT_REMOTE=2489
	local PORT_LOCAL=2489
	local LEM_SSH_ARGS="-f -N -R ${PORT_REMOTE}:127.0.0.1:${PORT_LOCAL}"

	case "${1}" in
		"-k")
			sshl_kill "${LEM_SSH_ARGS}"
			return 0
			;;
		"-s")
			sshl_print "${LEM_SSH_ARGS}"
			return 0
			;;
	esac

	pgrep -a -f "lemonade server"
	if [ "${?}" -ne 0 ]; then
		echo "starting lemonade server"
		lemonade server --port=${PORT_LOCAL} --allow="127.0.0.1,::1" --log-level=2 > /tmp/lemonade.log 2>&1 &!
		pgrep -a -f "lemonade server"
		if [ "${?}" -ne 0 ]; then
			cat /tmp/lemonade.log
			sshl_kill "${LEM_SSH_ARGS}"
			return 1
		fi
	fi

	pgrep -a -f "ssh.*${LEM_SSH_ARGS}"
	local NUM_SSH=$(pgrep -c -f "ssh.*${LEM_SSH_ARGS}")
	if [ "${NUM_SSH}" -ne 1 ]; then
		echo "starting ssh"
		if [ "${NUM_SSH}" -gt 1 ]; then
			pkill -e -f "ssh.*${LEM_SSH_ARGS}"
		fi
		eval "$(whence -p ssh) ${1} ${LEM_SSH_ARGS}"
		if [ "${?}" -ne 0 ]; then
			sshl_kill "${LEM_SSH_ARGS}"
			return 1
		fi
		pgrep -a -f "ssh.*${LEM_SSH_ARGS}"
	fi

	read
	ssh ${@}
}

function pyenv_init() {
	if [ "$(whence pyenv)" ]; then
		export PYENV_ROOT=$HOME/.pyenv
		eval "$(pyenv init -)"
	fi
}

