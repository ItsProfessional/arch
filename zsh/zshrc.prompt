setopt -o promptsubst

PS1="\${COL_ZSH_NOR}:\${STR_PROMPT}\${COL_ZSH_WAR}\${PR_WAR}\${COL_ZSH_ERR}\${PR_ERR}\${COL_ZSH_NOR};\${COL_ZSH_OFF} "
PS2="\${COL_ZSH_NOR}${PS2}\${COL_ZSH_OFF} "
PS3="\${COL_ZSH_NOR}${PS3}\${COL_ZSH_OFF} "
PS4="\${COL_ZSH_NOR}${PS4}\${COL_ZSH_OFF} "

# this is expensive and rarely needed, such as when attaching to a remote tmux session
PERIOD=10
function periodic() {
	updatetmuxssh
	updatecolours
	updatetmuxcolours
}

function updatecolours() {
	STR_PROMPT=""
	local COL_PROMPT=""
	if [ "${USER}" = "root" ]; then
		COL_PROMPT="red"
		STR_PROMPT=" ${HOST} "
	elif [ -n "${SSH_CONNECTION}" ]; then
		case "${HOST}" in
			(gigantor)
				COL_PROMPT="magenta"
				;;
			(duke)
				COL_PROMPT="blue"
				;;
			(*)
				COL_PROMPT="cyan"
				;;
		esac
		STR_PROMPT=" ${HOST} "
	else
		COL_PROMPT="green"
	fi
	COL_ZSH_OFF="%k%f"
	COL_ZSH_NOR="%F{black}%K{${COL_PROMPT}}"
	COL_ZSH_WAR="%F{black}%K{yellow}"
	COL_ZSH_ERR="%F{black}%K{red}"
	COL_TMUX="fg=black,bg=${COL_PROMPT}"
}

function precmd() {
	rc=${?}

	PR_ERR=
	PR_WAR=

	# set PR_ERR only if the last execution failed; ignore ^C or empty executions
	if [ "${PRE_EXECD}" = "true" -a "${rc}" -ne 0 ]; then
		PR_ERR=" ${rc} "
	fi
	PRE_EXECD="false"

	if [ -z "${TMUX}" ]; then
		PR_WAR="${PR_WAR} -tm "
	fi

	# no terminfo references as they are not reliable e.g. xterm missing fsl
	print -n "\E]0;"
	printtermtitle
	print -n ""

	# clear ^C for use by zle abort-buffer
	stty intr undef
}

function preexec() {
	PRE_EXECD="true"

	# restore ^C for whatever we execute
	stty intr 
}

